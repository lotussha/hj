<?php
/**
 * Created by PhpStorm.
 * PHP version 版本号
 *
 * @category 类别名称
 * @package  暂无
 * @author   hj <138610033@qq.com>
 * @license  暂无
 * @link     暂无
 * DateTime: 2020/8/19 上午11:59
 */

namespace app\apiadmin\controller\activity;

use app\apiadmin\controller\Base;
use app\common\validate\ActivityValidate;
use app\apiadmin\logic\ActivityLogic;
use app\common\model\ActivityModel;
use sakuno\utils\JsonUtils;

class MakeGroup extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        if ($this->admin_user['identity'] != 1) {
            echo json_encode(['status' => '0', 'code' => "10000", 'msg' => '没权限']);
            die;
        }
    }

    /**
     * 列表
     * @param ActivityLogic $logic
     * @return \think\response\Json
     */
    public function lists(ActivityLogic $logic)
    {
        $this->param['field'] = 'id,title,start_time,end_time,status';
        $page                 = isset($this->param['page']) ? $this->param['page'] : 1;
        $this->param['type']  = 1;//拼团
        $lists                = $logic->getActivityList($this->param);
        $data                 = ['lists' => $lists];
        return JsonUtils::successful('获取成功', $data);
    }

    /**
     * 操作
     * @param string $act
     * @return \think\Response|\think\response\Json
     */
    public function activityHandle($act='')
    {
        $activityLogic = new activityLogic();
        $validate = new activityValidate();
        $validate_result = $validate->scene($act)->check($this->param);
        if (!$validate_result) {
            return JsonUtils::fail($validate->getError());
        }
        $arr = $activityLogic->activityHandel($this->param, $act);
        return return_json($arr);
    }

    public function add()
    {
        return $this->activityHandle('add');
    }

    public function edit()
    {
        return $this->activityHandle('edit');
    }

    public function info(ActivityLogic $logic)
    {
        $this->param['a_field'] = 'id,title,start_time,end_time,status';
        $this->param['g_field'] = 'goods_id, key, key_name, price, original_price, group_price, sales_price, cost_price, profits_percent, store_count, spec_img';
        $validate = new activityValidate();
        $validate_result = $validate->scene('info')->check($this->param);
        if (!$validate_result) {
            return JsonUtils::fail($validate->getError());
        }
        return $logic->getInfo($this->param);
    }

    public function del(activityLogic $logic)
    {
        $activity_id = $this->param['id'] ?? 0;
        if (empty($activity_id)){
            return JsonUtils::fail( '活动ID不能为空');
        };
        return $logic->delActivity($activity_id);
    }
}